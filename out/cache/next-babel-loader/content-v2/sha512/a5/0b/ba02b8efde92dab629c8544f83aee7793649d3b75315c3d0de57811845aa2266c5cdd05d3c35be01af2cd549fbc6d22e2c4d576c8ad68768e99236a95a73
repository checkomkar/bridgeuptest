{"ast":null,"code":"import { all, call, put, takeEvery, takeLatest } from 'redux-saga/effects';\nimport * as actions from './actions';\nimport * as api from '../lib/api';\nimport log from '../lib/log';\n\nfunction* logActions(action) {\n  log.info('action', action);\n  yield;\n}\n\nfunction* thingsSaga() {\n  try {\n    const response = yield call(api.things.getThings);\n    yield put(actions.thingsLoadComplete(response));\n  } catch (error) {\n    yield put(actions.thingsLoadError(error));\n  }\n}\n\nfunction* thingAddSaga(action) {\n  try {\n    const response = yield call(api.things.addThing, action.payload);\n    yield put(actions.thingAddComplete(response));\n  } catch (error) {\n    yield put(actions.thingAddError(error));\n  }\n}\n\nfunction* rootSaga() {\n  yield all([takeEvery('*', logActions), takeLatest(actions.thingsLoad.type, thingsSaga), takeLatest(actions.thingAdd.type, thingAddSaga)]);\n}\n\nexport default rootSaga;","map":null,"metadata":{},"sourceType":"module"}