{"ast":null,"code":"import _regeneratorRuntime from \"E:/projects/nextjs-boilerplate-main/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/projects/nextjs-boilerplate-main/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nexport function delay(_x) {\n  return _delay.apply(this, arguments);\n}\n\nfunction _delay() {\n  _delay = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(n) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", new Promise(function (resolve) {\n              setTimeout(resolve, n);\n            }));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _delay.apply(this, arguments);\n}\n\nexport function randomChoice(items) {\n  return items[Math.floor(Math.random() * items.length)];\n}\nexport function randomSample(items, n) {\n  if (items.length == 0 || n <= 0) {\n    return [];\n  }\n\n  var sample = [];\n\n  while (sample.length < Math.min(n, items.length)) {\n    var item = randomChoice(items);\n\n    if (sample.indexOf(item) == -1) {\n      sample.push(item);\n    }\n  }\n\n  return sample;\n}\nexport function errorToJson(error) {\n  return {\n    message: error.message,\n    stack: error.stack\n  };\n}","map":null,"metadata":{},"sourceType":"module"}