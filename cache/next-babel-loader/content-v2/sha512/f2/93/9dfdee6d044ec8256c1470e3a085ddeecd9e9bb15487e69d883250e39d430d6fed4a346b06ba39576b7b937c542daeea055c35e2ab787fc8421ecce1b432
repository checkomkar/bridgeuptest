{"ast":null,"code":"import _regeneratorRuntime from \"E:/projects/nextjs-boilerplate-main/node_modules/@babel/runtime/regenerator\";\nimport _slicedToArray from \"E:/projects/nextjs-boilerplate-main/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"E:/projects/nextjs-boilerplate-main/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _backend$things;\n\nimport { delay } from './helpers';\nimport * as backend from '../backend';\nvar API_BASE_URL = process.env.NEXT_PUBLIC_API_BASE_URL || '/api';\nvar FAKE_DELAY = 2000;\n\nfunction apiFetch(_x, _x2) {\n  return _apiFetch.apply(this, arguments);\n}\n\nfunction _apiFetch() {\n  _apiFetch = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(method, path) {\n    var body,\n        res,\n        res_body,\n        _args3 = arguments;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            body = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : null;\n\n            if (!FAKE_DELAY) {\n              _context3.next = 4;\n              break;\n            }\n\n            _context3.next = 4;\n            return delay(FAKE_DELAY);\n\n          case 4:\n            _context3.next = 6;\n            return fetch(API_BASE_URL + path, {\n              method: method,\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: body && JSON.stringify(body)\n            });\n\n          case 6:\n            res = _context3.sent;\n            _context3.prev = 7;\n            _context3.next = 10;\n            return res.json();\n\n          case 10:\n            res_body = _context3.sent;\n            return _context3.abrupt(\"return\", res_body);\n\n          case 14:\n            _context3.prev = 14;\n            _context3.t0 = _context3[\"catch\"](7);\n            throw _context3.t0;\n\n          case 17:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[7, 14]]);\n  }));\n  return _apiFetch.apply(this, arguments);\n}\n\nexport function apiIsomorphic(_ref) {\n  var route = _ref.route,\n      backend = _ref.backend;\n  return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var body,\n        _route,\n        method,\n        path,\n        _args = arguments;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            body = _args.length > 0 && _args[0] !== undefined ? _args[0] : null;\n\n            if (!true) {\n              _context.next = 8;\n              break;\n            }\n\n            _route = _slicedToArray(route, 2), method = _route[0], path = _route[1];\n            _context.next = 5;\n            return apiFetch(method, path, body !== null && body !== void 0 ? body : undefined);\n\n          case 5:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 8:\n            _context.next = 10;\n            return backend(body !== null && body !== void 0 ? body : undefined);\n\n          case 10:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n}\nexport var things = {\n  getThings: apiIsomorphic({\n    route: ['get', '/things'],\n    backend: (_backend$things = backend.things) === null || _backend$things === void 0 ? void 0 : _backend$things.getThings\n  }),\n  addThing: function () {\n    var _addThing = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(body) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return apiFetch('post', '/things', body);\n\n            case 2:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function addThing(_x3) {\n      return _addThing.apply(this, arguments);\n    }\n\n    return addThing;\n  }()\n};","map":null,"metadata":{},"sourceType":"module"}