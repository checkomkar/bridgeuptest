{"ast":null,"code":"var _backend$things;\n\nimport { delay } from './helpers';\nimport * as backend from '../backend';\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_BASE_URL || '/api';\nconst FAKE_DELAY = 2000;\n\nasync function apiFetch(method, path, body = null) {\n  if (FAKE_DELAY) await delay(FAKE_DELAY);\n  const res = await fetch(API_BASE_URL + path, {\n    method,\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: body && JSON.stringify(body)\n  });\n\n  try {\n    const res_body = await res.json();\n    return res_body;\n  } catch (err) {\n    throw err;\n  }\n}\n\nexport function apiIsomorphic({\n  route,\n  backend\n}) {\n  return async function (body = null) {\n    if (false) {\n      const [method, path] = route;\n      return await apiFetch(method, path, body !== null && body !== void 0 ? body : undefined);\n    } else {\n      return await backend(body !== null && body !== void 0 ? body : undefined);\n    }\n  };\n}\nexport const things = {\n  getThings: apiIsomorphic({\n    route: ['get', '/things'],\n    backend: (_backend$things = backend.things) === null || _backend$things === void 0 ? void 0 : _backend$things.getThings\n  }),\n  addThing: async body => await apiFetch('post', '/things', body)\n};","map":null,"metadata":{},"sourceType":"module"}